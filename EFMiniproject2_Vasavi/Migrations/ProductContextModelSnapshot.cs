// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using try_again2;

namespace EFMiniproject2_Vasavi.Migrations
{
    [DbContext(typeof(ProductContext))]
    partial class ProductContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("try_again2.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("try_again2.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Productname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Product");
                });

            modelBuilder.Entity("try_again2.Laptop", b =>
                {
                    b.HasBaseType("try_again2.Product");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("Laptop_CompanyId");

                    b.HasIndex("CompanyId");

                    b.HasDiscriminator().HasValue("Laptop");
                });

            modelBuilder.Entity("try_again2.Mobile", b =>
                {
                    b.HasBaseType("try_again2.Product");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.HasIndex("CompanyId");

                    b.HasDiscriminator().HasValue("Mobile");
                });

            modelBuilder.Entity("try_again2.Laptop", b =>
                {
                    b.HasOne("try_again2.Company", null)
                        .WithMany("laptops")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("try_again2.Mobile", b =>
                {
                    b.HasOne("try_again2.Company", null)
                        .WithMany("Mobiles")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("try_again2.Company", b =>
                {
                    b.Navigation("laptops");

                    b.Navigation("Mobiles");
                });
#pragma warning restore 612, 618
        }
    }
}
